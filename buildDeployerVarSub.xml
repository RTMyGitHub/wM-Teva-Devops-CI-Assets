<?xml version="1.0"?>

<project default="teva.deployer.varsub.generateVarSubTemplates" basedir="." name="build_DeployerVarsub">
	
	<description>
		This build file provides a utility with which variable substitution templates can be created.
		For this, a variable substitution file is extracted from Deployer and the variable substitution templates are extracted from it dynamically.
		Provide the following parameters:
			- teva.projectName: The name of the Deployer project
			- teva.deploymentMapName: The name of the deployment map in the Deployer project from which to extract the variable substitution file
			- teva.targetEnv: The target environment for which to create the variable substitution templates, e.g. DEV, TEST, QA or PROD
			- teva.varsubDir: The directory where to store the generated varsub templates. 
	</description>

	<property name="projectAutomatorDefinition" location="${config.tmpdir}/${projectName}_PA_template.definition.xml" />
	<property name="varsubDir" location="${teva.varsubDir}"/>

	<condition property="isWindows">
		<os family="windows" />
	</condition>

	<condition property="isUnix">
		<os family="unix" />
	</condition>

	<target name="teva.deployer.initWindows" if="isWindows">
		<property name="deployerExecutable" value="Deployer.bat" />
		<property name="deployerAutomatorExecutable" value="projectautomator.bat" />
	</target>

	<target name="teva.deployer.initUnix" if="isUnix">
		<property name="deployerExecutable" value="Deployer.sh" />
		<property name="deployerAutomatorExecutable" value="projectautomatorUnix.sh" />
	</target>

	<target name="teva.deployer.varsub.init" depends="teva.deployer.initWindows, teva.deployer.initUnix">
		
	</target>
	
	<target name="teva.deployer.varsub.generateVarSubTemplates" depends="teva.deployer.varsub.init" description="Export varsub file from Deployer and extract varsub templates from it">
		<fail message="Required parameters missing">
			<condition>
				<not>
					<and>
						<isset property="teva.projectName"/>
						<isset property="teva.deploymentMapName"/>
						<isset property="teva.targetEnv"/>
						<isset property="varsubDir"/>
					</and>
				</not>
			</condition>
		</fail>
		
		<property name="deployerReplicateOutboundDir" location="${config.deployer.deployerInstallationPath}/../replicate/outbound"/>
		<property name="varSubFilename" location="${deployerReplicateOutboundDir}/${teva.projectName}_${teva.deploymentMapName}.vs"/>
		
		<antcall target="teva.deployer.varsub.exportVarSubDeployer"/>
		<antcall target="teva.deployer.varsub.extractVarSubTemplates"/>
	</target>
	
	<target name="teva.deployer.varsub.exportVarSubDeployer" depends="" >
		<log msg="Extracting variable substitution for project ${teva.projectName} and deployment map ${deploymentMapName}" />
		<!-- prepare by deleting old varub file in Deployer replicate/outbound dir -->
		<delete file="${varSubFilename}"></delete>
		<property name="output" value="${config.deployer.deployerInstallationPath}/logs/CLI.log" />
		<exec executable="${config.deployer.deployerInstallationPath}/${deployerExecutable}" dir="${config.deployer.deployerInstallationPath}" output="${output}" resultproperty="exportVarsubReturnCode" failonerror="false">
			<arg value="--export" />
			<arg line="-map ${teva.deploymentMapName}" />
			<arg line="-project ${teva.projectName}" />
			<arg value="-varsub" />
			<arg line="-host ${config.deployer.deployerHost}" />
			<arg line="-port ${config.deployer.deployerPort}" />
			<arg line="-user ${config.deployer.deployerUsername}" />
			<arg line="-pwd ${config.deployer.deployerPassword}" />
		</exec>
		<log msg="Exporting the varsub file '${varSubFilename}' restulted in return code ${exportVarsubReturnCode}. See logs at '${output}'." />
		<if>
			<and>
				<equals arg1="${exportVarsubReturnCode}" arg2="0" />
				<available file="${varSubFilename}"/>				
			</and>
			<then>
				<log msg="-- Exported variable substitution will be used: '${varSubFilename}'" />			
			</then>
			<else>
				<loadfile property="CLI.log" srcFile="${output}" />
				<log msg="Deployer varsub export either did not create expected output file ${varSubFilename}, or the export returned an error. Output of file '${output}'" level="ERROR" />
				<log msg="${CLI.log}" level="ERROR" />
				<fail message="Error when importing the varsub file ${varSubFilename}." />
			</else>
		</if>
	</target>

	<target name="teva.deployer.varsub.extractVarSubTemplates">
		<log msg="Extracting variable substitution for target environment '${teva.targetEnv}' and varsub file '${varSubFilename}'" />
		<log msg="Storing resulting varsub files in directory '${varsubDir}'."/>

		<property name="groovyScript.ExtractVarSub" location="resources/vs/ExtractVarSub.groovy" />
		<log msg="Calling '${groovyScript.ExtractVarSub}' to create varsub template files" />
		<groovy src="${groovyScript.ExtractVarSub}">
			<arg line="-varsubFilePath ${varSubFilename}" />
			<arg line="-varsubDirPath ${varsubDir}" />
			<arg line="-target ${teva.targetEnv}" />
		</groovy>

	</target>
</project>
